{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gopin\\\\ReactJS_Projects\\\\datasite-code-test\\\\src\\\\components\\\\UsersListingComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setAllUsers } from \"../redux/actions/Actions\";\nimport useFetch from \"./common/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersListingComponent = () => {\n  _s();\n\n  const {\n    loading,\n    regUsers\n  } = useFetch(\"https://5c3ce12c29429300143fe570.mockapi.io/api/registeredusers\"); // console.log(\"into users Listing\");\n\n  const [displayData, setDisplayData] = useState(false);\n  const [registered, setRegistered] = useState([]);\n  const [unregistered, setUnRegistered] = useState([]);\n  const [users, setUsers] = useState([]);\n  const dispatch = useDispatch();\n\n  const refreshPage = () => {\n    console.log(\"refresh calle....\");\n    setUsers([]);\n    setDisplayData(!displayData);\n    console.log(\"display\");\n  };\n\n  const getDataFromAPI = async (url, type) => {\n    console.log(\"url called... \", url);\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (type == \"registered\") {\n      console.log(\"into reg...\");\n      setRegistered(data);\n    } else {\n      console.log(\"into unreg...\");\n      setUnRegistered(data);\n    }\n  };\n  /*\r\n  useEffect(() => {\r\n    //fetching unregistered data....\r\n    console.log(\"Use Effect called..\");\r\n    getDataFromAPI(\r\n      \"https://5c3ce12c29429300143fe570.mockapi.io/api/unregisteredusers\",\r\n      \"unregistered\"\r\n    ).then(() => {\r\n      unregistered.map((each) => {\r\n        setUsers((users) => [\r\n          ...users,\r\n          { id: each.id, status: \"UNREG\", projectID: [] },\r\n        ]);\r\n        // users.push({ id: each.id, status: \"UNREG\" });\r\n          console.log(\"user aftert : \", users);\r\n      });\r\n    });\r\n      //fetching registered data....\r\n    getDataFromAPI(\r\n      \"https://5c3ce12c29429300143fe570.mockapi.io/api/registeredusers\",\r\n      \"registered\"\r\n    ).then(() => {\r\n      registered.map((each) => {\r\n        setUsers((users) => [\r\n          ...users,\r\n          { id: each.id, status: \"REG\", projectID: [] },\r\n        ]);\r\n        //        users.push({ id: each.id, status: \"REG\" });\r\n      });\r\n      console.log(\"user aftert : \", users);\r\n    });\r\n  \r\n  }, [displayData]);\r\n  */\n  // console.log(\"USER DATA AFTER FINAL UPDATE : \", users);\n\n\n  console.log(\"Reg users using useFetch : \", regUsers); //dispatching the users to the store\n\n  dispatch(setAllUsers(users));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: refreshPage,\n      children: \" Display Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersListingComponent, \"wX41DEA05qmJDDlA2bmKAXjLBFU=\", false, function () {\n  return [useFetch, useDispatch];\n});\n\n_c = UsersListingComponent;\nexport default UsersListingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListingComponent\");","map":{"version":3,"sources":["C:/Users/gopin/ReactJS_Projects/datasite-code-test/src/components/UsersListingComponent.js"],"names":["React","useEffect","useState","useDispatch","setAllUsers","useFetch","UsersListingComponent","loading","regUsers","displayData","setDisplayData","registered","setRegistered","unregistered","setUnRegistered","users","setUsers","dispatch","refreshPage","console","log","getDataFromAPI","url","type","response","fetch","data","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAClC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBH,QAAQ,CACpC,iEADoC,CAAtC,CADkC,CAKlC;;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAJ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAN,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GALD;;AAOA,QAAMC,cAAc,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AAC1CJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,GAA9B;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,QAAIJ,IAAI,IAAI,YAAZ,EAA0B;AACxBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAR,MAAAA,aAAa,CAACc,IAAD,CAAb;AACD,KAHD,MAGO;AACLP,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAN,MAAAA,eAAe,CAACY,IAAD,CAAf;AACD;AACF,GAZD;AAaA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;;;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CZ,QAA3C,EAvEkC,CAyElC;;AACAS,EAAAA,QAAQ,CAACb,WAAW,CAACW,KAAD,CAAZ,CAAR;AAEA,sBACE;AAAA,eACG,GADH,eAEE;AAAQ,MAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAnGD;;GAAMZ,qB;UAC0BD,Q,EAUbF,W;;;KAXbG,qB;AAqGN,eAAeA,qBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAllUsers } from \"../redux/actions/Actions\";\r\nimport useFetch from \"./common/useFetch\";\r\n\r\nconst UsersListingComponent = () => {\r\n  const { loading, regUsers } = useFetch(\r\n    \"https://5c3ce12c29429300143fe570.mockapi.io/api/registeredusers\"\r\n  );\r\n\r\n  // console.log(\"into users Listing\");\r\n  const [displayData, setDisplayData] = useState(false);\r\n  const [registered, setRegistered] = useState([]);\r\n  const [unregistered, setUnRegistered] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const refreshPage = () => {\r\n    console.log(\"refresh calle....\");\r\n    setUsers([]);\r\n    setDisplayData(!displayData);\r\n    console.log(\"display\");\r\n  };\r\n\r\n  const getDataFromAPI = async (url, type) => {\r\n    console.log(\"url called... \", url);\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    if (type == \"registered\") {\r\n      console.log(\"into reg...\");\r\n      setRegistered(data);\r\n    } else {\r\n      console.log(\"into unreg...\");\r\n      setUnRegistered(data);\r\n    }\r\n  };\r\n  /*\r\n  useEffect(() => {\r\n    //fetching unregistered data....\r\n    console.log(\"Use Effect called..\");\r\n    getDataFromAPI(\r\n      \"https://5c3ce12c29429300143fe570.mockapi.io/api/unregisteredusers\",\r\n      \"unregistered\"\r\n    ).then(() => {\r\n      unregistered.map((each) => {\r\n        setUsers((users) => [\r\n          ...users,\r\n          { id: each.id, status: \"UNREG\", projectID: [] },\r\n        ]);\r\n        // users.push({ id: each.id, status: \"UNREG\" });\r\n\r\n        console.log(\"user aftert : \", users);\r\n      });\r\n    });\r\n\r\n    //fetching registered data....\r\n    getDataFromAPI(\r\n      \"https://5c3ce12c29429300143fe570.mockapi.io/api/registeredusers\",\r\n      \"registered\"\r\n    ).then(() => {\r\n      registered.map((each) => {\r\n        setUsers((users) => [\r\n          ...users,\r\n          { id: each.id, status: \"REG\", projectID: [] },\r\n        ]);\r\n        //        users.push({ id: each.id, status: \"REG\" });\r\n      });\r\n      console.log(\"user aftert : \", users);\r\n    });\r\n  \r\n  }, [displayData]);\r\n*/\r\n  // console.log(\"USER DATA AFTER FINAL UPDATE : \", users);\r\n\r\n  console.log(\"Reg users using useFetch : \", regUsers);\r\n\r\n  //dispatching the users to the store\r\n  dispatch(setAllUsers(users));\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <button onClick={refreshPage}> Display Users</button>\r\n      {/* <table>\r\n        <thead>\r\n          <tr>\r\n            <td>id</td>\r\n            <td>status</td>\r\n            <td> Project ID</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((each) => (\r\n            <tr>\r\n              <td> {each.id} </td> <td> {each.status}</td>{\" \"}\r\n              <td> {each.projectID}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersListingComponent;\r\n"]},"metadata":{},"sourceType":"module"}