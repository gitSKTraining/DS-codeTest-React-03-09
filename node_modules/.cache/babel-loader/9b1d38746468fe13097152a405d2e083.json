{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]); //using axios to get JSON data from the url\n\n  const getData = () => {\n    axios.get(url).then(response => {\n      setData(response);\n    }).catch(error => console.log(\"ERROR while fetching data... \"));\n  };\n\n  useEffect(() => {\n    getData();\n  }, [url]); //this returns the data fetched .\n\n  return {\n    data\n  };\n};\n\n_s(useFetch, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/gopin/ReactJS_Projects/datasite-code-test/src/components/common/useFetch.js"],"names":["axios","React","useEffect","useState","useFetch","url","data","setData","getData","get","then","response","catch","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC,CADwB,CAGxB;;AACA,QAAMK,OAAO,GAAG,MAAM;AACpBR,IAAAA,KAAK,CACFS,GADH,CACOJ,GADP,EAEGK,IAFH,CAESC,QAAD,IAAc;AAClBJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,+BAAZ,CALpB;AAMD,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACH,GAAD,CAFM,CAAT,CAbwB,CAiBxB;;AACA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACD,CAnBD;;GAAMF,Q;;AAqBN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  //using axios to get JSON data from the url\r\n  const getData = () => {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        setData(response);\r\n      })\r\n      .catch((error) => console.log(\"ERROR while fetching data... \"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [url]);\r\n\r\n  //this returns the data fetched .\r\n  return { data };\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}