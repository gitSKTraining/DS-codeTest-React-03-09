{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gopin\\\\ReactJS_Projects\\\\datasite-code-test\\\\src\\\\components\\\\UsersListingComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useFetch from \"./common/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersListingComponent = () => {\n  _s();\n\n  console.log(\"into users Listing\");\n  const [registeredUsers, setRegisteredUsers] = useState([]);\n  const [unregisteredUsers, setUnRegisteredUsers] = useState([]);\n  const [temp, setTemp] = useState([]);\n  const [users, setUsers] = useState([{\n    eachUser\n  }]);\n  const eachUser = {\n    id: \"\",\n    status: \"\"\n  };\n  const dispatch = useDispatch();\n\n  const getDataFromAPI = async (url, type) => {\n    const response = await fetch(url);\n    console.log(\"response after fetch : \", response); // if (type == \"registered\") {\n    //   setRegisteredUsers(await response.json());\n    // } else {\n    //   setUnRegisteredUsers(await response.json());\n    // }\n\n    setTemp(await response.json());\n    console.log(\"user data : \", temp);\n    temp.forEach(each => {\n      eachUser.id = each.id;\n      eachUser.status = \"UNREG\";\n      setUsers(...users, eachUser);\n    });\n  };\n\n  useEffect(() => {\n    getDataFromAPI(\"https://5c3ce12c29429300143fe570.mockapi.io/api/unregisteredusers\").then(() => {\n      console.log(\"USER DATA AFTER UPDATE : \", users);\n    }).catch(error => {\n      console.log(\"ERROR while fetching data from API !!!\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UsersListingComponent, \"rBGIvQuebtFZl6BB9zR1oW9rLvs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UsersListingComponent;\nexport default UsersListingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListingComponent\");","map":{"version":3,"sources":["C:/Users/gopin/ReactJS_Projects/datasite-code-test/src/components/UsersListingComponent.js"],"names":["React","useEffect","useState","useDispatch","useFetch","UsersListingComponent","console","log","registeredUsers","setRegisteredUsers","unregisteredUsers","setUnRegisteredUsers","temp","setTemp","users","setUsers","eachUser","id","status","dispatch","getDataFromAPI","url","type","response","fetch","json","forEach","each","then","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAC;AAAEc,IAAAA;AAAF,GAAD,CAAD,CAAlC;AACA,QAAMA,QAAQ,GAAG;AAAEC,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,MAAM,EAAE;AAAlB,GAAjB;AACA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,QAAMiB,cAAc,GAAG,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AAC1C,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AAEAf,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCgB,QAAvC,EAH0C,CAK1C;AACA;AACA;AACA;AACA;;AAEAV,IAAAA,OAAO,CAAC,MAAMU,QAAQ,CAACE,IAAT,EAAP,CAAP;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BK,IAA5B;AACAA,IAAAA,IAAI,CAACc,OAAL,CAAcC,IAAD,IAAU;AACrBX,MAAAA,QAAQ,CAACC,EAAT,GAAcU,IAAI,CAACV,EAAnB;AACAD,MAAAA,QAAQ,CAACE,MAAT,GAAkB,OAAlB;AACAH,MAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAWE,QAAX,CAAR;AACD,KAJD;AAKD,GAlBD;;AAoBAf,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,cAAc,CACZ,mEADY,CAAd,CAGGQ,IAHH,CAGQ,MAAM;AACVtB,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCO,KAAzC;AACD,KALH,EAMGe,KANH,CAMUC,KAAD,IAAW;AAChBxB,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDuB,KAAtD;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA1CD;;GAAMzB,qB;UAOaF,W;;;KAPbE,qB;AA4CN,eAAeA,qBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useFetch from \"./common/useFetch\";\r\n\r\nconst UsersListingComponent = () => {\r\n  console.log(\"into users Listing\");\r\n  const [registeredUsers, setRegisteredUsers] = useState([]);\r\n  const [unregisteredUsers, setUnRegisteredUsers] = useState([]);\r\n  const [temp, setTemp] = useState([]);\r\n  const [users, setUsers] = useState([{ eachUser }]);\r\n  const eachUser = { id: \"\", status: \"\" };\r\n  const dispatch = useDispatch();\r\n\r\n  const getDataFromAPI = async (url, type) => {\r\n    const response = await fetch(url);\r\n\r\n    console.log(\"response after fetch : \", response);\r\n\r\n    // if (type == \"registered\") {\r\n    //   setRegisteredUsers(await response.json());\r\n    // } else {\r\n    //   setUnRegisteredUsers(await response.json());\r\n    // }\r\n\r\n    setTemp(await response.json());\r\n    console.log(\"user data : \", temp);\r\n    temp.forEach((each) => {\r\n      eachUser.id = each.id;\r\n      eachUser.status = \"UNREG\";\r\n      setUsers(...users, eachUser);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataFromAPI(\r\n      \"https://5c3ce12c29429300143fe570.mockapi.io/api/unregisteredusers\"\r\n    )\r\n      .then(() => {\r\n        console.log(\"USER DATA AFTER UPDATE : \", users);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ERROR while fetching data from API !!!\", error);\r\n      });\r\n  }, []);\r\n\r\n  return <div>Hi</div>;\r\n};\r\n\r\nexport default UsersListingComponent;\r\n"]},"metadata":{},"sourceType":"module"}