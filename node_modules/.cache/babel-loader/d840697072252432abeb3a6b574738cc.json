{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gopin\\\\ReactJS_Projects\\\\datasite-code-test\\\\src\\\\components\\\\UsersListingComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setAllUsers } from \"../redux/actions/Actions\";\nimport useFetch from \"./common/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersListingComponent = () => {\n  _s();\n\n  console.log(\"into users Listing\");\n  const [refresh, setRefresh] = useState(false);\n  const [registered, setRegistered] = useState([]);\n  const [unregistered, setUnRegistered] = useState([]);\n  const [users, setUsers] = useState([]);\n  const dispatch = useDispatch();\n\n  const refreshPage = () => {\n    console.log(\"refresh calle....\");\n    setRefresh(true);\n  };\n\n  const getDataFromAPI = async (url, type) => {\n    console.log(\"url called... \", url);\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (type == \"registered\") {\n      console.log(\"into reg...\");\n      setRegistered(data);\n    } else {\n      console.log(\"into unreg...\");\n      setUnRegistered(data);\n    }\n  };\n\n  useEffect(() => {\n    //fetching unregistered data....\n    console.log(\"Values are : \", registered.length, \" \", unregistered.length); // if (registered.length == 0 && unregistered.length == 0) {\n    //   setUsers([]);\n    // }\n\n    getDataFromAPI(\"https://5c3ce12c29429300143fe570.mockapi.io/api/unregisteredusers\", \"unregistered\").then(() => {\n      unregistered.map(each => {\n        //  console.log(\"UNREG=> \", each);\n        setUsers(users => [...users, {\n          id: each.id,\n          status: \"UNREG\",\n          projectID: \"\"\n        }]); // users.push({ id: each.id, status: \"UNREG\" });\n\n        console.log(\"user aftert : \", users);\n      });\n    }); //fetching registered data....\n\n    getDataFromAPI(\"https://5c3ce12c29429300143fe570.mockapi.io/api/registeredusers\", \"registered\").then(() => {\n      registered.map(each => {\n        setUsers(users => [...users, {\n          id: each.id,\n          status: \"REG\",\n          projectID: \"\"\n        }]); //        users.push({ id: each.id, status: \"REG\" });\n      });\n      console.log(\"user aftert : \", users);\n    });\n  }, [refresh]); // console.log(\"USER DATA AFTER FINAL UPDATE : \", users);\n  //dispatching the users to the store\n\n  dispatch(setAllUsers(users));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: refreshPage,\n      children: \" refreshPage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(each => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", each.id, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", each.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 36\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", each.projectID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersListingComponent, \"G7LF7Xyq3qh4I+hY6fSC29OFJqg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UsersListingComponent;\nexport default UsersListingComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListingComponent\");","map":{"version":3,"sources":["C:/Users/gopin/ReactJS_Projects/datasite-code-test/src/components/UsersListingComponent.js"],"names":["React","useEffect","useState","useDispatch","setAllUsers","useFetch","UsersListingComponent","console","log","refresh","setRefresh","registered","setRegistered","unregistered","setUnRegistered","users","setUsers","dispatch","refreshPage","getDataFromAPI","url","type","response","fetch","data","json","length","then","map","each","id","status","projectID"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAllUsers } from \"../redux/actions/Actions\";\r\nimport useFetch from \"./common/useFetch\";\r\n\r\nconst UsersListingComponent = () => {\r\n  console.log(\"into users Listing\");\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [registered, setRegistered] = useState([]);\r\n  const [unregistered, setUnRegistered] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const refreshPage = () => {\r\n    console.log(\"refresh calle....\");\r\n    setRefresh(true);\r\n  };\r\n\r\n  const getDataFromAPI = async (url, type) => {\r\n    console.log(\"url called... \", url);\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    if (type == \"registered\") {\r\n      console.log(\"into reg...\");\r\n      setRegistered(data);\r\n    } else {\r\n      console.log(\"into unreg...\");\r\n      setUnRegistered(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //fetching unregistered data....\r\n    console.log(\"Values are : \", registered.length, \" \", unregistered.length);\r\n    // if (registered.length == 0 && unregistered.length == 0) {\r\n    //   setUsers([]);\r\n    // }\r\n    getDataFromAPI(\r\n      \"https://5c3ce12c29429300143fe570.mockapi.io/api/unregisteredusers\",\r\n      \"unregistered\"\r\n    ).then(() => {\r\n      unregistered.map((each) => {\r\n        //  console.log(\"UNREG=> \", each);\r\n        setUsers((users) => [\r\n          ...users,\r\n          { id: each.id, status: \"UNREG\", projectID: \"\" },\r\n        ]);\r\n        // users.push({ id: each.id, status: \"UNREG\" });\r\n\r\n        console.log(\"user aftert : \", users);\r\n      });\r\n    });\r\n\r\n    //fetching registered data....\r\n    getDataFromAPI(\r\n      \"https://5c3ce12c29429300143fe570.mockapi.io/api/registeredusers\",\r\n      \"registered\"\r\n    ).then(() => {\r\n      registered.map((each) => {\r\n        setUsers((users) => [\r\n          ...users,\r\n          { id: each.id, status: \"REG\", projectID: \"\" },\r\n        ]);\r\n        //        users.push({ id: each.id, status: \"REG\" });\r\n      });\r\n      console.log(\"user aftert : \", users);\r\n    });\r\n  }, [refresh]);\r\n\r\n  // console.log(\"USER DATA AFTER FINAL UPDATE : \", users);\r\n\r\n  //dispatching the users to the store\r\n  dispatch(setAllUsers(users));\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <button onClick={refreshPage}> refreshPage</button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td>id</td>\r\n            <td>status</td>\r\n            <td> Project ID</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((each) => (\r\n            <tr>\r\n              <td> {each.id} </td> <td> {each.status}</td>{\" \"}\r\n              <td> {each.projectID}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersListingComponent;\r\n"]},"metadata":{},"sourceType":"module"}